{"version":3,"sources":["systemic-watcher.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;AAEb,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,gBAAgB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,CAAC;;AAEnE,IAAI,YAAY,GAAG,gBAAgB,CAAC,aAAa,CAAC;AAClD,IAAI,WAAW,GAAG,gBAAgB,CAAC,UAAU,CAAC;AAC9C,IAAI,OAAO,GAAG,gBAAgB,CAAC,SAAS,CAAC;;AAEzC,IAAI,GAAG,GAAG,SAAN,GAAG,CAAY,UAAU,EAAC;AAC5B,SAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxB,IAAE,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,EAAE,YAAW;AAC5C,WAAO,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC;GACrC,CAAC,CAAC;CACJ,CAAA;;AAED,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,CAC/C,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC,CACvB,EAAE,CAAC,KAAK,EAAE,UAAA,IAAI;SAAI,GAAG,CAAC,+BAA+B,CAAC;CAAA,CAAC,CACvD,EAAE,CAAC,QAAQ,EAAE,UAAA,IAAI;SAAI,GAAG,CAAC,QAAQ,CAAC;CAAA,CAAC,CAAC;;AAEvC,SAAS,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE;AACjC,KAAG,CAAC,SAAS,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;CAC3C;;AAID,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC","file":"systemic-watcher-compiled.js","sourcesContent":["/**\n * Created by Adron on 12/10/15.\n * Description: Wraps the core functionality around the needs of the project 'systemic-filewatcher'\n */\n\"use strict\";\n\nvar systemic_watcher = {};\nvar chokidar = require(\"chokidar\");\nvar systemic_options = require(\"../options.json\").systemic_watcher;\n\nvar watchOptions = systemic_options.watch_options;\nvar pathToWatch = systemic_options.watch_path;\nvar logFile = systemic_options.watch_log;\n\nvar log = function(appendData){\n  console.log(appendData);\n  fs.appendFile(logFile, appendData, function() {\n    console.log(\"Wrote: \" + appendData);\n  });\n}\n\nvar watcher = chokidar.watch(pathToWatch, options)\n  .on('all', eventDefault)\n  .on('add', path => log('Extra event message for $path'))\n  .on('change', path => log('Blargh'));\n\nfunction eventDefault(event, path) {\n  log(\"Event: \" + event + \" Path: \" + path);\n}\n\n\n\nmodule.exports = systemic_watcher;"]}