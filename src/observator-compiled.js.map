{"version":3,"sources":["observator.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;AAEb,IAAI,UAAU,GAAG,EAAE,CAAC;AACpB,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,gBAAgB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,CAAC;;AAEnE,IAAI,OAAO,GAAG,gBAAgB,CAAC,aAAa,CAAC;AAC7C,IAAI,WAAW,GAAG,gBAAgB,CAAC,UAAU,CAAC;AAC9C,IAAI,OAAO,GAAG,gBAAgB,CAAC,SAAS,CAAC;AACzC,IAAI,OAAO,CAAC;;AAEZ,IAAI,MAAM,GAAG,SAAT,MAAM,CAAa,UAAU,EAAE;AACjC,SAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACxB,IAAE,CAAC,UAAU,CAAC,OAAO,EAAE,UAAU,GAAG,IAAI,EAAE,YAAY;AACpD,WAAO,CAAC,GAAG,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC;GACzC,CAAC,CAAC;CACJ,CAAC;;AAEF,UAAU,CAAC,KAAK,GAAG,YAAY;;;;AAI7B,SAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,CAC3C,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CACnB,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CACnB,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACtB,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACtB,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CACtB,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC,CACzB,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CACrB,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC,CACnB,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;CAC1B,CAAC;;AAEF,UAAU,CAAC,SAAS,GAAG,YAAY;AACjC,SAAO,CAAC,KAAK,EAAE,CAAC;CACjB,CAAC;;AAEF,UAAU,CAAC,UAAU,GAAG,YAAY;AAClC,SAAO,OAAO,CAAC,UAAU,EAAE,CAAC;CAC7B,CAAC;;AAEF,SAAS,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE;AACpC,QAAM,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;AAC1B,QAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;CACzB;;AAED,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;AAC7B,iBAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;CAC9B;;AAED,SAAS,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE;AAChC,iBAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;CAC9B;;AAED,SAAS,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE;AAChC,iBAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;CAC9B;;AAED,SAAS,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE;AAChC,iBAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;CAC9B;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"observator-compiled.js","sourcesContent":["/**\n * Created by Adron on 12/10/15.\n * Description: Wraps the core functionality around the needs of the project 'systemic-filewatcher'\n */\n\"use strict\";\n\nvar observator = {};\nvar chokidar = require(\"chokidar\");\nvar fs = require(\"fs\");\nvar systemic_options = require(\"../options.json\").systemic_watcher;\n\nvar options = systemic_options.watch_options;\nvar pathToWatch = systemic_options.watch_path;\nvar logFile = systemic_options.watch_log;\nvar watcher;\n\nvar loggit = function (appendData) {\n  console.log(appendData);\n  fs.appendFile(logFile, appendData + \"\\n\", function () {\n    console.log(\"  - Wrote: \" + appendData);\n  });\n};\n\nobservator.watch = function () {\n\n  // Initialize File.\n\n  watcher = chokidar.watch(pathToWatch, options)\n    .on(\"all\", eventAll)\n    .on(\"add\", eventAll)\n    .on(\"change\", eventAll)\n    .on(\"unlink\", eventAll)\n    .on(\"addDir\", eventAll)\n    .on(\"unlinkDir\", eventAll)\n    .on(\"ready\", eventAll)\n    .on(\"raw\", eventAll)\n    .on(\"error\", eventAll);\n};\n\nobservator.watchStop = function () {\n  watcher.close();\n};\n\nobservator.watchPaths = function () {\n  return watcher.getWatched();\n};\n\nfunction logEventAndPath(event, path) {\n  loggit(\"Event: \" + event);\n  loggit(\"Path: \" + path);\n}\n\nfunction eventAll(event, path) {\n  logEventAndPath(event, path);\n}\n\nfunction eventChange(event, path) {\n  logEventAndPath(event, path);\n}\n\nfunction eventUnlink(event, path) {\n  logEventAndPath(event, path);\n}\n\nfunction eventAddDir(event, path) {\n  logEventAndPath(event, path);\n}\n\nmodule.exports = observator;"]}